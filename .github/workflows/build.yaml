name: Build WolfOS

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-os:
    runs-on: self-hosted
    steps:
      # Step 1: Check out the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Install dependencies
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            gcc \
            make \
            genisoimage \
            squashfs-tools \
            grub-pc-bin \
            xorriso \
            debootstrap \
            cloud-init

      # Step 3: Download the Linux Kernel
      - name: Download Linux Kernel
        run: |
          wget https://github.com/WolfTech-Innovations/WolfKernel/releases/download/1.21/bzImage -O bzImage

      # Step 4: Set up the root filesystem with WolfOS branding
      - name: Set up root filesystem
        run: |
          mkdir -p rootfs
          sudo debootstrap --arch=amd64 stable rootfs http://deb.debian.org/debian/

          # Install necessary packages
          sudo chroot rootfs apt-get install -y openbox chromium plank \
            pcmanfm vlc cloud-init

          # Remove terminal applications
          sudo chroot rootfs apt-get purge -y xterm gnome-terminal

          # Add WolfOS branding
          echo "NAME=\"WolfOS\"" > rootfs/etc/os-release
          echo "VERSION=\"1.0\"" >> rootfs/etc/os-release
          echo "PRETTY_NAME=\"WolfOS 1.0\"" >> rootfs/etc/os-release
          echo "Welcome to WolfOS!" > rootfs/etc/issue
          # Add custom branding (logos, wallpapers, etc.)
          mkdir -p rootfs/usr/share/wolfos
          echo "WolfOS" > rootfs/usr/share/wolfos/branding.txt

      # Step 5: Configure cloud-init and locked filesystem
      - name: Configure cloud-init and locked filesystem
        run: |
          mkdir -p rootfs/etc/cloud
          echo "datasource_list: [ NoCloud, ConfigDrive ]" > rootfs/etc/cloud/cloud.cfg.d/99_datasource.cfg
          echo "network: {config: disabled}" > rootfs/etc/cloud/cloud.cfg.d/99_disable-network.cfg
          echo "Cloud-init has been configured to enforce cloud dependency."
          sudo mksquashfs rootfs locked-rootfs.squashfs -comp xz -Xbcj x86
          echo "Locked filesystem created as locked-rootfs.squashfs"

      # Step 6: Create bootable ISO
      - name: Create bootable ISO
        run: |
          mkdir -p iso/boot/grub
          cp bzImage iso/boot/vmlinuz
          cat <<EOF > iso/boot/grub/grub.cfg
          set timeout=5
          set default=0

          menuentry "WolfOS" {
              linux /boot/vmlinuz boot=live
              initrd /boot/initrd.img
          }
          EOF
          grub-mkrescue -o wolfos.iso iso

      # Step 7: Upload the ISO as an artifact
      - name: Upload ISO artifact
        uses: actions/upload-artifact@v3
        with:
          name: wolfos
          path: wolfos.iso
