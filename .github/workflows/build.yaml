name: Build WolfOS

on:
  workflow_dispatch:
    inputs:
      force_fail:
        description: "Force fail"
        required: false
        default: "No"
        type: choice
        options:
          - "No"
          - "Yes"

jobs:
  build-os:
    runs-on: ubuntu-latest
    outputs:
      build_success: ${{ steps.set-status.outputs.success }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install dependencies
        id: install-deps
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            gcc \
            make \
            genisoimage \
            squashfs-tools \
            grub-pc-bin \
            xorriso \
            mtools

      - name: Download Kernel & Resources
        id: download
        run: |
          set -e
          mkdir -p iso/boot/grub

          wget -O iso/boot/vmlinuz https://raw.githubusercontent.com/WolfTech-Innovations/WLFBUILD-RESOURCE/main/vmlinuz
          wget -O iso/boot/grub/grub.cfg https://raw.githubusercontent.com/WolfTech-Innovations/WLFBUILD-RESOURCE/main/grub.cfg
          wget -O iso/boot/grub/splash.png https://raw.githubusercontent.com/WolfTech-Innovations/WLFBUILD-RESOURCE/main/splash.png
          wget -O iso/boot/init.cpio.gz https://sourceforge.net/projects/wolfos/files/initramfs-compressed-source/init.cpio.gz/download

      - name: Create ISO
        id: iso
        run: |
          set -e
          grub-mkrescue -o wolfos.iso iso

      - name: Install sshpass
        id: sshpass
        run: |
          set -e
          sudo apt-get install -y sshpass

      - name: Upload to SourceForge
        id: upload
        env:
          SF_USER: ${{ secrets.SF_USER }}
          SF_PASS: ${{ secrets.SF_PASS }}
          OSVER: 6
        run: |
          set -e
          sshpass -p "$SF_PASS" scp -o StrictHostKeyChecking=no ./wolfos.iso \
            "$SF_USER@frs.sourceforge.net:/home/frs/project/wolfos/WolfOS-v${OSVER}.iso"

      - name: Upload Artifacts
        id: artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wolfos-iso
          path: wolfos.iso

      - name: Set build status
        id: set-status
        run: |
          if [[ "${{ github.event.inputs.force_fail }}" == "Yes" ]]; then
            echo "Forced failure."
            echo "success=false" >> $GITHUB_OUTPUT
            exit 0
          fi

          if [[ "${{ steps.install-deps.outcome }}" == "failure" || \
                "${{ steps.download.outcome }}" == "failure" || \
                "${{ steps.iso.outcome }}" == "failure" || \
                "${{ steps.sshpass.outcome }}" == "failure" || \
                "${{ steps.upload.outcome }}" == "failure" || \
                "${{ steps.artifacts.outcome }}" == "failure" ]]; then
            echo "Detected failure in steps."
            echo "success=false" >> $GITHUB_OUTPUT
          else
            echo "All steps succeeded."
            echo "success=true" >> $GITHUB_OUTPUT
          fi

  notify-api:
    needs: build-os
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify API
        env:
          API_URL: ${{ secrets.API_URL }}
        run: |
            curl -X POST "$API_URL"
