name: Build WolfOS
on:
  workflow_dispatch:
    inputs:
      force_fail:
        description: "Force fail API (Now used for FAILAPI.YAML)"
        required: false
        default: "No"
        type: choice
        options:
          - "No"
          - "Yes"
jobs:
  build-os:
    runs-on: ubuntu-latest
    outputs:
      build_success: ${{ steps.set-status.outputs.success }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          set -e
          sudo apt-get update
          sudo apt-get install -y \
            build-essential \
            gcc \
            make \
            syslinux \
            syslinux-utils \
            isolinux \
            genisoimage \
            squashfs-tools \
            mtools \
            sshpass \
            wget
      - name: Download Kernel & Resources
        run: |
          set -e
          mkdir -p iso/isolinux
          
          echo "[DOWNLOAD] Kernel"
          wget -O iso/vmlinuz https://raw.githubusercontent.com/WolfTech-Innovations/WLFBUILD-RESOURCE/main/vmlinuz
          
          echo "[DOWNLOAD] Initramfs"
          wget -O iso/initrd.img.xz https://sourceforge.net/projects/wolfos/files/initramfs-compressed-source/initrd.img.xz/download
          
          echo "[DOWNLOAD] Splash Image"
          wget -O iso/splash.png https://raw.githubusercontent.com/WolfTech-Innovations/WLFBUILD-RESOURCE/main/splash.png
          
          echo "[DOWNLOAD] isolinux.cfg"
          wget -O iso/isolinux/isolinux.cfg https://raw.githubusercontent.com/WolfTech-Innovations/WLFBUILD-RESOURCE/main/isolinux.cfg
          
          echo "[COPY] ISOLINUX files"
          sudo cp /usr/lib/ISOLINUX/isolinux.bin iso/isolinux/
          sudo cp /usr/lib/syslinux/modules/bios/*.c32 iso/isolinux/
      - name: Create ISO
        run: |
          set -e
          sudo genisoimage -o wolfos.iso \
            -b isolinux/isolinux.bin \
            -c isolinux/boot.cat \
            -no-emul-boot -boot-load-size 4 -boot-info-table \
            -V "WOLFOS" \
            -r -J \
            iso
         sudo isohybrid wolfos.iso
  
      - name: Upload to SourceForge
        env:
          SF_USER: ${{ secrets.SF_USER }}
          SF_PASS: ${{ secrets.SF_PASS }}
          OSVER: 1
        run: |
          set -e
          sshpass -p "$SF_PASS" scp -o StrictHostKeyChecking=no ./wolfos.iso \
            "$SF_USER@frs.sourceforge.net:/home/frs/project/wolfos/WolfOS-v${OSVER}.iso"
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: wolfos-iso
          path: wolfos.iso
      - name: Set build status
        id: set-status
        run: |
          if [[ "${{ github.event.inputs.force_fail }}" == "Yes" ]]; then
            echo "Forced failure."
            echo "success=false" >> $GITHUB_OUTPUT
            exit 0
          fi
          echo "success=true" >> $GITHUB_OUTPUT
  notify-api:
    needs: build-os
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Notify API
        env:
          API_URL: ${{ secrets.API_URL }}
        run: |
          curl --max-time 30 "$API_URL"
